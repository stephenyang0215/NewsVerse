{"ast":null,"code":"export default {\n  props: [\"text\"],\n  data() {\n    return {\n      // 默认滚动的文字内容\n      text: data,\n      animationDuration: 10 // 默认滚动时长，单位：秒\n    };\n  },\n  computed: {\n    // 动态计算滚动容器的宽度\n    scrollStyle() {\n      const textWidth = this.getTextWidth(this.text);\n      // 根据文字长度动态计算动画时长，假设文字的宽度与时长成比例\n      const duration = this.animationDuration + textWidth / 300 + \"s\"; // 300是一个调节滚动速度的参数\n      return {\n        animationDuration: duration\n      };\n    }\n  },\n  methods: {\n    // 获取文字的宽度\n    getTextWidth(text) {\n      // 创建一个临时元素来测量文字的宽度\n      const span = document.createElement(\"span\");\n      span.style.visibility = \"hidden\";\n      span.style.position = \"absolute\";\n      span.textContent = text;\n      document.body.appendChild(span);\n      const width = span.offsetWidth;\n      document.body.removeChild(span);\n      return width;\n    }\n  }\n};","map":{"version":3,"names":["props","data","text","animationDuration","computed","scrollStyle","textWidth","getTextWidth","duration","methods","span","document","createElement","style","visibility","position","textContent","body","appendChild","width","offsetWidth","removeChild"],"sources":["src/components/TextScroll.vue"],"sourcesContent":["<template>\r\n  <div class=\"scroll-container\">\r\n    <div class=\"scroll-text\" :style=\"scrollStyle\">\r\n      <span>{{ text }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"text\"],\r\n  data() {\r\n    return {\r\n      // 默认滚动的文字内容\r\n      text: data,\r\n      animationDuration: 10, // 默认滚动时长，单位：秒\r\n    };\r\n  },\r\n  computed: {\r\n    // 动态计算滚动容器的宽度\r\n    scrollStyle() {\r\n      const textWidth = this.getTextWidth(this.text);\r\n      // 根据文字长度动态计算动画时长，假设文字的宽度与时长成比例\r\n      const duration = this.animationDuration + textWidth / 300 + \"s\"; // 300是一个调节滚动速度的参数\r\n      return {\r\n        animationDuration: duration,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    // 获取文字的宽度\r\n    getTextWidth(text) {\r\n      // 创建一个临时元素来测量文字的宽度\r\n      const span = document.createElement(\"span\");\r\n      span.style.visibility = \"hidden\";\r\n      span.style.position = \"absolute\";\r\n      span.textContent = text;\r\n      document.body.appendChild(span);\r\n      const width = span.offsetWidth;\r\n      document.body.removeChild(span);\r\n      return width;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.scroll-container {\r\n  width: 100%; /* 让滚动容器的宽度适应父容器 */\r\n  overflow: hidden; /* 隐藏超出的部分 */\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  white-space: nowrap;\r\n  position: relative;\r\n}\r\n\r\n.scroll-text {\r\n  display: inline-block;\r\n  white-space: nowrap;\r\n  animation: scroll-left linear infinite;\r\n}\r\n\r\n.scroll-text span {\r\n  font-size: 24px;\r\n  padding-right: 50px; /* 每个字之间有间隔 */\r\n}\r\n\r\n@keyframes scroll-left {\r\n  from {\r\n    transform: translateX(100%); /* 从右边开始 */\r\n  }\r\n  to {\r\n    transform: translateX(-100%); /* 向左移动，直到完全离开 */\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AASA;EACAA,KAAA;EACAC,KAAA;IACA;MACA;MACAC,IAAA,EAAAD,IAAA;MACAE,iBAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,YAAA;MACA,MAAAC,SAAA,QAAAC,YAAA,MAAAL,IAAA;MACA;MACA,MAAAM,QAAA,QAAAL,iBAAA,GAAAG,SAAA;MACA;QACAH,iBAAA,EAAAK;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAF,aAAAL,IAAA;MACA;MACA,MAAAQ,IAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,IAAA,CAAAG,KAAA,CAAAC,UAAA;MACAJ,IAAA,CAAAG,KAAA,CAAAE,QAAA;MACAL,IAAA,CAAAM,WAAA,GAAAd,IAAA;MACAS,QAAA,CAAAM,IAAA,CAAAC,WAAA,CAAAR,IAAA;MACA,MAAAS,KAAA,GAAAT,IAAA,CAAAU,WAAA;MACAT,QAAA,CAAAM,IAAA,CAAAI,WAAA,CAAAX,IAAA;MACA,OAAAS,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}