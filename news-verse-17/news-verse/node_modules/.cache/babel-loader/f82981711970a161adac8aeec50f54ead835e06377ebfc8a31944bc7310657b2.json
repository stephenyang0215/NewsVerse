{"ast":null,"code":"export default {\n  props: {\n    imageSrc: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectionBox: {\n        x: 0,\n        y: 0,\n        width: 200,\n        height: 150\n      },\n      // Selection box initial position and size\n      startPoint: null,\n      isSelecting: false,\n      isDragging: false,\n      isResizing: false,\n      isOverlayVisible: false\n    };\n  },\n  computed: {\n    selectionBoxStyle() {\n      return {\n        position: \"absolute\",\n        left: `${this.selectionBox.x}px`,\n        top: `${this.selectionBox.y}px`,\n        width: `${this.selectionBox.width}px`,\n        height: `${this.selectionBox.height}px`,\n        border: \"2px solid rgba(0, 0, 0, 0.5)\",\n        cursor: \"move\"\n      };\n    },\n    maskStyle() {\n      return {\n        top: \"0px\",\n        left: \"0px\",\n        width: `${this.$refs.image ? this.$refs.image.width : 0}px`,\n        height: `${this.$refs.image ? this.$refs.image.height : 0}px`,\n        background: \"rgba(0, 0, 0, 0.5)\"\n      };\n    }\n  },\n  methods: {\n    onImageLoad() {\n      this.isOverlayVisible = true;\n    },\n    startSelect(event) {\n      const imgRect = this.$refs.image.getBoundingClientRect();\n      const offsetX = event.clientX - imgRect.left;\n      const offsetY = event.clientY - imgRect.top;\n      this.startPoint = {\n        x: offsetX,\n        y: offsetY\n      };\n      this.isSelecting = true;\n    },\n    mouseMove(event) {\n      if (this.isSelecting) {\n        const imgRect = this.$refs.image.getBoundingClientRect();\n        const offsetX = event.clientX - imgRect.left;\n        const offsetY = event.clientY - imgRect.top;\n        this.selectionBox.width = offsetX - this.startPoint.x;\n        this.selectionBox.height = offsetY - this.startPoint.y;\n      } else if (this.isDragging) {\n        const imgRect = this.$refs.image.getBoundingClientRect();\n        const offsetX = event.clientX - this.dragStart.x;\n        const offsetY = event.clientY - this.dragStart.y;\n        this.selectionBox.x = this.dragStartBox.x + offsetX;\n        this.selectionBox.y = this.dragStartBox.y + offsetY;\n      } else if (this.isResizing) {\n        const imgRect = this.$refs.image.getBoundingClientRect();\n        const offsetX = event.clientX - this.resizeStart.x;\n        const offsetY = event.clientY - this.resizeStart.y;\n        this.selectionBox.width = Math.max(50, this.resizeStartBox.width + offsetX);\n        this.selectionBox.height = Math.max(50, this.resizeStartBox.height + offsetY);\n      }\n    },\n    mouseUp() {\n      this.isSelecting = false;\n      this.isDragging = false;\n      this.isResizing = false;\n    },\n    startDrag(event) {\n      event.stopPropagation();\n      this.dragStart = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      this.dragStartBox = {\n        x: this.selectionBox.x,\n        y: this.selectionBox.y\n      };\n      this.isDragging = true;\n    },\n    startResize(event) {\n      event.stopPropagation();\n      this.resizeStart = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      this.resizeStartBox = {\n        width: this.selectionBox.width,\n        height: this.selectionBox.height\n      };\n      this.isResizing = true;\n    },\n    onOverlayClick(event) {\n      this.isOverlayVisible = false;\n    }\n  },\n  mounted() {\n    document.addEventListener(\"mousemove\", this.mouseMove);\n    document.addEventListener(\"mouseup\", this.mouseUp);\n    this.$refs.image.addEventListener(\"mousedown\", this.startSelect);\n  },\n  destroyed() {\n    document.removeEventListener(\"mousemove\", this.mouseMove);\n    document.removeEventListener(\"mouseup\", this.mouseUp);\n  }\n};","map":{"version":3,"names":["props","imageSrc","type","String","required","data","selectionBox","x","y","width","height","startPoint","isSelecting","isDragging","isResizing","isOverlayVisible","computed","selectionBoxStyle","position","left","top","border","cursor","maskStyle","$refs","image","background","methods","onImageLoad","startSelect","event","imgRect","getBoundingClientRect","offsetX","clientX","offsetY","clientY","mouseMove","dragStart","dragStartBox","resizeStart","Math","max","resizeStartBox","mouseUp","startDrag","stopPropagation","startResize","onOverlayClick","mounted","document","addEventListener","destroyed","removeEventListener"],"sources":["src/components/ImageSelection.vue"],"sourcesContent":["<template>\n  <div class=\"image-marking-container\">\n    <img :src=\"imageSrc\" class=\"image\" ref=\"image\" @load=\"onImageLoad\" />\n\n    <div\n      class=\"mask\"\n      v-show=\"isDragging || isSelecting\"\n      :style=\"maskStyle\"\n    ></div>\n\n    <div\n      class=\"selection-box\"\n      v-show=\"isSelecting || isResizing || isDragging\"\n      :style=\"selectionBoxStyle\"\n      @mousedown=\"startDrag\"\n      ref=\"selectionBox\"\n    >\n      <div\n        class=\"resize-handle\"\n        v-show=\"isResizing\"\n        @mousedown=\"startResize\"\n      ></div>\n      <div class=\"drag-handle\" @mousedown=\"startDrag\"></div>\n    </div>\n\n    <div\n      class=\"overlay\"\n      v-show=\"isOverlayVisible\"\n      @mousedown=\"onOverlayClick\"\n    ></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    imageSrc: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      selectionBox: { x: 0, y: 0, width: 200, height: 150 }, // Selection box initial position and size\n      startPoint: null,\n      isSelecting: false,\n      isDragging: false,\n      isResizing: false,\n      isOverlayVisible: false,\n    };\n  },\n  computed: {\n    selectionBoxStyle() {\n      return {\n        position: \"absolute\",\n        left: `${this.selectionBox.x}px`,\n        top: `${this.selectionBox.y}px`,\n        width: `${this.selectionBox.width}px`,\n        height: `${this.selectionBox.height}px`,\n        border: \"2px solid rgba(0, 0, 0, 0.5)\",\n        cursor: \"move\",\n      };\n    },\n    maskStyle() {\n      return {\n        top: \"0px\",\n        left: \"0px\",\n        width: `${this.$refs.image ? this.$refs.image.width : 0}px`,\n        height: `${this.$refs.image ? this.$refs.image.height : 0}px`,\n        background: \"rgba(0, 0, 0, 0.5)\",\n      };\n    },\n  },\n  methods: {\n    onImageLoad() {\n      this.isOverlayVisible = true;\n    },\n    startSelect(event) {\n      const imgRect = this.$refs.image.getBoundingClientRect();\n      const offsetX = event.clientX - imgRect.left;\n      const offsetY = event.clientY - imgRect.top;\n      this.startPoint = { x: offsetX, y: offsetY };\n      this.isSelecting = true;\n    },\n    mouseMove(event) {\n      if (this.isSelecting) {\n        const imgRect = this.$refs.image.getBoundingClientRect();\n        const offsetX = event.clientX - imgRect.left;\n        const offsetY = event.clientY - imgRect.top;\n        this.selectionBox.width = offsetX - this.startPoint.x;\n        this.selectionBox.height = offsetY - this.startPoint.y;\n      } else if (this.isDragging) {\n        const imgRect = this.$refs.image.getBoundingClientRect();\n        const offsetX = event.clientX - this.dragStart.x;\n        const offsetY = event.clientY - this.dragStart.y;\n        this.selectionBox.x = this.dragStartBox.x + offsetX;\n        this.selectionBox.y = this.dragStartBox.y + offsetY;\n      } else if (this.isResizing) {\n        const imgRect = this.$refs.image.getBoundingClientRect();\n        const offsetX = event.clientX - this.resizeStart.x;\n        const offsetY = event.clientY - this.resizeStart.y;\n        this.selectionBox.width = Math.max(\n          50,\n          this.resizeStartBox.width + offsetX\n        );\n        this.selectionBox.height = Math.max(\n          50,\n          this.resizeStartBox.height + offsetY\n        );\n      }\n    },\n    mouseUp() {\n      this.isSelecting = false;\n      this.isDragging = false;\n      this.isResizing = false;\n    },\n    startDrag(event) {\n      event.stopPropagation();\n      this.dragStart = { x: event.clientX, y: event.clientY };\n      this.dragStartBox = { x: this.selectionBox.x, y: this.selectionBox.y };\n      this.isDragging = true;\n    },\n    startResize(event) {\n      event.stopPropagation();\n      this.resizeStart = { x: event.clientX, y: event.clientY };\n      this.resizeStartBox = {\n        width: this.selectionBox.width,\n        height: this.selectionBox.height,\n      };\n      this.isResizing = true;\n    },\n    onOverlayClick(event) {\n      this.isOverlayVisible = false;\n    },\n  },\n  mounted() {\n    document.addEventListener(\"mousemove\", this.mouseMove);\n    document.addEventListener(\"mouseup\", this.mouseUp);\n    this.$refs.image.addEventListener(\"mousedown\", this.startSelect);\n  },\n  destroyed() {\n    document.removeEventListener(\"mousemove\", this.mouseMove);\n    document.removeEventListener(\"mouseup\", this.mouseUp);\n  },\n};\n</script>\n\n<style scoped>\n.image-marking-container {\n  position: relative;\n  display: inline-block;\n}\n.image {\n  display: block;\n  max-width: 100%;\n}\n.mask {\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n}\n.selection-box {\n  position: absolute;\n  border: 2px solid rgba(0, 0, 0, 0.5);\n  cursor: move;\n}\n.resize-handle {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  width: 10px;\n  height: 10px;\n  background-color: red;\n  cursor: se-resize;\n}\n.drag-handle {\n  position: absolute;\n  top: -10px;\n  left: 50%;\n  margin-left: -5px;\n  width: 10px;\n  height: 10px;\n  background-color: blue;\n  cursor: move;\n}\n.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.3);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}