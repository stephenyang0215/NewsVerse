{"ast":null,"code":"export default {\n  props: {\n    text: {\n      type: String,\n      required: true\n    },\n    animationDuration: {\n      type: Number,\n      default: 80 // 默认滚动时长，单位：秒\n    }\n  },\n  computed: {\n    // 动态计算滚动的时长\n    scrollStyle() {\n      const textWidth = this.getTextWidth(this.text);\n      const duration = textWidth / 500 + this.animationDuration + \"s\"; // 根据文本宽度动态调整滚动时间\n      return {\n        animationDuration: duration\n      };\n    }\n  },\n  methods: {\n    // 计算文本的宽度\n    getTextWidth(text) {\n      const span = document.createElement(\"span\");\n      span.style.visibility = \"hidden\";\n      span.style.position = \"absolute\";\n      span.textContent = text;\n      document.body.appendChild(span);\n      const width = span.offsetWidth;\n      document.body.removeChild(span);\n      return width;\n    }\n  }\n};","map":{"version":3,"names":["props","text","type","String","required","animationDuration","Number","default","computed","scrollStyle","textWidth","getTextWidth","duration","methods","span","document","createElement","style","visibility","position","textContent","body","appendChild","width","offsetWidth","removeChild"],"sources":["src/components/TextScroll.vue"],"sourcesContent":["<template>\n  <div class=\"scroll-container\">\n    <div class=\"scroll-text\" :style=\"scrollStyle\">\n      <span>{{ text }}</span>\n      <span>{{ text }}</span>\n      <!-- 复制文本，确保无缝滚动 -->\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    text: {\n      type: String,\n      required: true,\n    },\n    animationDuration: {\n      type: Number,\n      default: 80, // 默认滚动时长，单位：秒\n    },\n  },\n  computed: {\n    // 动态计算滚动的时长\n    scrollStyle() {\n      const textWidth = this.getTextWidth(this.text);\n      const duration = textWidth / 500 + this.animationDuration + \"s\"; // 根据文本宽度动态调整滚动时间\n      return {\n        animationDuration: duration,\n      };\n    },\n  },\n  methods: {\n    // 计算文本的宽度\n    getTextWidth(text) {\n      const span = document.createElement(\"span\");\n      span.style.visibility = \"hidden\";\n      span.style.position = \"absolute\";\n      span.textContent = text;\n      document.body.appendChild(span);\n      const width = span.offsetWidth;\n      document.body.removeChild(span);\n      return width;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.scroll-container {\n  width: 100%;\n  overflow: hidden; /* 隐藏超出部分 */\n  background-color: #fff;\n  border: 1px solid #ccc;\n  position: relative;\n  white-space: nowrap; /* 保证文字在一行内 */\n}\n\n.scroll-text {\n  display: inline-block;\n  white-space: nowrap;\n  animation: scroll-left linear infinite; /* 无限滚动 */\n}\n\n.scroll-text span {\n  font-size: 24px;\n  padding-right: 50px; /* 控制文字之间的间隔 */\n}\n\n@keyframes scroll-left {\n  from {\n    transform: translateX(100%); /* 从容器右边开始 */\n  }\n  to {\n    transform: translateX(-100%); /* 滚动到容器左边 */\n  }\n}\n</style>\n"],"mappings":"AAWA;EACAA,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,iBAAA;MACAH,IAAA,EAAAI,MAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,YAAA;MACA,MAAAC,SAAA,QAAAC,YAAA,MAAAV,IAAA;MACA,MAAAW,QAAA,GAAAF,SAAA,cAAAL,iBAAA;MACA;QACAA,iBAAA,EAAAO;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAF,aAAAV,IAAA;MACA,MAAAa,IAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,IAAA,CAAAG,KAAA,CAAAC,UAAA;MACAJ,IAAA,CAAAG,KAAA,CAAAE,QAAA;MACAL,IAAA,CAAAM,WAAA,GAAAnB,IAAA;MACAc,QAAA,CAAAM,IAAA,CAAAC,WAAA,CAAAR,IAAA;MACA,MAAAS,KAAA,GAAAT,IAAA,CAAAU,WAAA;MACAT,QAAA,CAAAM,IAAA,CAAAI,WAAA,CAAAX,IAAA;MACA,OAAAS,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}