{"ast":null,"code":"export default {\n  props: [\"text\"],\n  data() {\n    return {\n      // 默认滚动的文字内容\n      animationDuration: 7 // 默认滚动时长，单位：秒\n    };\n  },\n  computed: {\n    // 动态计算滚动容器的宽度\n    scrollStyle() {\n      const textWidth = this.getTextWidth(this.text);\n      // 根据文字长度动态计算动画时长，假设文字的宽度与时长成比例\n      const duration = this.animationDuration + textWidth / 300 + \"s\"; // 300是一个调节滚动速度的参数\n      return {\n        animationDuration: duration\n      };\n    }\n  },\n  methods: {\n    // 获取文字的宽度\n    getTextWidth(text) {\n      // 创建一个临时元素来测量文字的宽度\n      const span = document.createElement(\"span\");\n      span.style.visibility = \"hidden\";\n      span.style.position = \"absolute\";\n      span.textContent = text;\n      document.body.appendChild(span);\n      const width = span.offsetWidth;\n      document.body.removeChild(span);\n      return width;\n    }\n  }\n};","map":{"version":3,"names":["props","data","animationDuration","computed","scrollStyle","textWidth","getTextWidth","text","duration","methods","span","document","createElement","style","visibility","position","textContent","body","appendChild","width","offsetWidth","removeChild"],"sources":["src/components/TextScroll.vue"],"sourcesContent":["<template>\n  <div class=\"scroll-container\">\n    <div class=\"scroll-text\" :style=\"scrollStyle\">\n      <span>{{ text }}</span>\n      <span>{{ text }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: [\"text\"],\n  data() {\n    return {\n      // 默认滚动的文字内容\n      animationDuration: 7, // 默认滚动时长，单位：秒\n    };\n  },\n  computed: {\n    // 动态计算滚动容器的宽度\n    scrollStyle() {\n      const textWidth = this.getTextWidth(this.text);\n      // 根据文字长度动态计算动画时长，假设文字的宽度与时长成比例\n      const duration = this.animationDuration + textWidth / 300 + \"s\"; // 300是一个调节滚动速度的参数\n      return {\n        animationDuration: duration,\n      };\n    },\n  },\n  methods: {\n    // 获取文字的宽度\n    getTextWidth(text) {\n      // 创建一个临时元素来测量文字的宽度\n      const span = document.createElement(\"span\");\n      span.style.visibility = \"hidden\";\n      span.style.position = \"absolute\";\n      span.textContent = text;\n      document.body.appendChild(span);\n      const width = span.offsetWidth;\n      document.body.removeChild(span);\n      return width;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.scroll-container {\n  width: 100%; /* 让滚动容器的宽度适应父容器 */\n  overflow: hidden; /* 隐藏超出的部分 */\n  background-color: #fff;\n  border: 1px solid #ccc;\n  white-space: nowrap;\n  position: relative;\n}\n\n.scroll-text {\n  display: inline-block;\n  white-space: nowrap;\n  animation: scroll-left linear infinite;\n}\n\n.scroll-text span {\n  font-size: 24px;\n  padding-right: 50px; /* 每个字之间有间隔 */\n}\n\n@keyframes scroll-left {\n  from {\n    transform: translateX(100%); /* 从右边开始 */\n  }\n  to {\n    transform: translateX(-100%); /* 向左移动，直到完全离开 */\n  }\n}\n</style>\n"],"mappings":"AAUA;EACAA,KAAA;EACAC,KAAA;IACA;MACA;MACAC,iBAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,YAAA;MACA,MAAAC,SAAA,QAAAC,YAAA,MAAAC,IAAA;MACA;MACA,MAAAC,QAAA,QAAAN,iBAAA,GAAAG,SAAA;MACA;QACAH,iBAAA,EAAAM;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAH,aAAAC,IAAA;MACA;MACA,MAAAG,IAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,IAAA,CAAAG,KAAA,CAAAC,UAAA;MACAJ,IAAA,CAAAG,KAAA,CAAAE,QAAA;MACAL,IAAA,CAAAM,WAAA,GAAAT,IAAA;MACAI,QAAA,CAAAM,IAAA,CAAAC,WAAA,CAAAR,IAAA;MACA,MAAAS,KAAA,GAAAT,IAAA,CAAAU,WAAA;MACAT,QAAA,CAAAM,IAAA,CAAAI,WAAA,CAAAX,IAAA;MACA,OAAAS,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}