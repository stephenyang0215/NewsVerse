{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    // 父组件传递过来的图片路径\n    imageSrc: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      activeMode: null,\n      // 当前激活的模式: 'selectArea' 或 'markArea'\n      selectArea: null,\n      // 选中的区域信息\n      markedAreas: [],\n      // 标记区域列表\n      startX: 0,\n      startY: 0,\n      isDragging: false,\n      currentDragIndex: null\n    };\n  },\n  computed: {\n    selectAreaStyle() {\n      return {\n        width: this.selectArea ? `${this.selectArea.width}px` : \"0\",\n        height: this.selectArea ? `${this.selectArea.height}px` : \"0\",\n        top: `${this.selectArea ? this.selectArea.top : 0}px`,\n        left: `${this.selectArea ? this.selectArea.left : 0}px`\n      };\n    }\n  },\n  methods: {\n    onImageClick(e) {\n      if (this.activeMode === \"selectArea\" && !this.selectArea) {\n        const rect = this.$refs.image.getBoundingClientRect();\n        this.startX = e.clientX - rect.left;\n        this.startY = e.clientY - rect.top;\n        this.selectArea = {\n          left: this.startX,\n          top: this.startY,\n          width: 0,\n          height: 0\n        };\n      }\n    },\n    startSelectArea(e) {\n      if (this.activeMode !== \"selectArea\" || this.selectArea) return;\n      const rect = this.$refs.image.getBoundingClientRect();\n      const startX = e.clientX - rect.left;\n      const startY = e.clientY - rect.top;\n      this.selectArea = {\n        left: startX,\n        top: startY,\n        width: 0,\n        height: 0\n      };\n      this.isDragging = true;\n      document.addEventListener(\"mousemove\", this.resizeArea);\n      document.addEventListener(\"mouseup\", this.stopSelectArea);\n    },\n    resizeArea(e) {\n      const rect = this.$refs.image.getBoundingClientRect();\n      const newWidth = e.clientX - rect.left - this.selectArea.left;\n      const newHeight = e.clientY - rect.top - this.selectArea.top;\n      this.selectArea.width = Math.max(10, newWidth);\n      this.selectArea.height = Math.max(10, newHeight);\n    },\n    stopSelectArea() {\n      this.isDragging = false;\n      document.removeEventListener(\"mousemove\", this.resizeArea);\n      document.removeEventListener(\"mouseup\", this.stopSelectArea);\n    },\n    startDragMark(index) {\n      this.currentDragIndex = index;\n      document.addEventListener(\"mousemove\", this.dragMark);\n      document.addEventListener(\"mouseup\", this.stopDragMark);\n    },\n    dragMark(e) {\n      const mark = this.markedAreas[this.currentDragIndex];\n      const rect = this.$refs.image.getBoundingClientRect();\n      const offsetX = e.clientX - rect.left;\n      const offsetY = e.clientY - rect.top;\n      mark.style.left = `${offsetX}px`;\n      mark.style.top = `${offsetY}px`;\n    },\n    stopDragMark() {\n      document.removeEventListener(\"mousemove\", this.dragMark);\n      document.removeEventListener(\"mouseup\", this.stopDragMark);\n    },\n    addMark() {\n      if (this.activeMode === \"markArea\" && this.selectArea) {\n        const newMark = {\n          style: {\n            left: `${this.selectArea.left}px`,\n            top: `${this.selectArea.top}px`,\n            width: `${this.selectArea.width}px`,\n            height: `${this.selectArea.height}px`\n          }\n        };\n        this.markedAreas.push(newMark);\n        this.selectArea = null;\n      }\n    },\n    removeMark(index) {\n      this.markedAreas.splice(index, 1);\n    },\n    saveData() {\n      const data = {\n        selectArea: this.selectArea,\n        marks: this.markedAreas.map(mark => ({\n          left: mark.style.left,\n          top: mark.style.top,\n          width: mark.style.width,\n          height: mark.style.height\n        }))\n      };\n      console.log(\"Save data:\", data);\n      // 发送数据到后端（API 调用）\n      // axios.post('/api/save', data);\n    }\n  },\n  watch: {\n    activeMode(newMode) {\n      if (newMode === \"markArea\") {\n        this.addMark();\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","imageSrc","type","String","required","data","activeMode","selectArea","markedAreas","startX","startY","isDragging","currentDragIndex","computed","selectAreaStyle","width","height","top","left","methods","onImageClick","e","rect","$refs","image","getBoundingClientRect","clientX","clientY","startSelectArea","document","addEventListener","resizeArea","stopSelectArea","newWidth","newHeight","Math","max","removeEventListener","startDragMark","index","dragMark","stopDragMark","mark","offsetX","offsetY","style","addMark","newMark","push","removeMark","splice","saveData","marks","map","console","log","watch","newMode"],"sources":["src/components/ImageSelection.vue"],"sourcesContent":["<template>\n  <div class=\"image-container\">\n    <div class=\"image-wrapper\" @click=\"onImageClick\">\n      <img :src=\"imageSrc\" alt=\"image\" ref=\"image\" />\n\n      <!-- 可操作区域 -->\n      <div\n        v-if=\"isSelectingArea\"\n        class=\"select-area\"\n        :style=\"selectAreaStyle\"\n        @mousedown=\"startSelectArea\"\n      ></div>\n\n      <!-- 区域外遮罩层 -->\n      <div v-if=\"isSelectingArea\" class=\"mask\"></div>\n\n      <!-- 标记区域 -->\n      <div\n        v-for=\"(mark, index) in markedAreas\"\n        :key=\"index\"\n        class=\"mark-area\"\n        :style=\"mark.style\"\n        @mousedown=\"startDragMark(index)\"\n        @dblclick=\"removeMark(index)\"\n      ></div>\n    </div>\n\n    <!-- 控制开关 -->\n    <div class=\"controls\">\n      <label>\n        <input type=\"radio\" v-model=\"activeMode\" value=\"selectArea\" />\n        选择可操作区域\n      </label>\n      <label>\n        <input type=\"radio\" v-model=\"activeMode\" value=\"markArea\" />\n        选择标记区域\n      </label>\n      <button @click=\"saveData\">保存</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    // 父组件传递过来的图片路径\n    imageSrc: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      activeMode: null, // 当前激活的模式: 'selectArea' 或 'markArea'\n      selectArea: null, // 选中的区域信息\n      markedAreas: [], // 标记区域列表\n      startX: 0,\n      startY: 0,\n      isDragging: false,\n      currentDragIndex: null,\n    };\n  },\n  computed: {\n    selectAreaStyle() {\n      return {\n        width: this.selectArea ? `${this.selectArea.width}px` : \"0\",\n        height: this.selectArea ? `${this.selectArea.height}px` : \"0\",\n        top: `${this.selectArea ? this.selectArea.top : 0}px`,\n        left: `${this.selectArea ? this.selectArea.left : 0}px`,\n      };\n    },\n  },\n  methods: {\n    onImageClick(e) {\n      if (this.activeMode === \"selectArea\" && !this.selectArea) {\n        const rect = this.$refs.image.getBoundingClientRect();\n        this.startX = e.clientX - rect.left;\n        this.startY = e.clientY - rect.top;\n        this.selectArea = {\n          left: this.startX,\n          top: this.startY,\n          width: 0,\n          height: 0,\n        };\n      }\n    },\n\n    startSelectArea(e) {\n      if (this.activeMode !== \"selectArea\" || this.selectArea) return;\n      const rect = this.$refs.image.getBoundingClientRect();\n      const startX = e.clientX - rect.left;\n      const startY = e.clientY - rect.top;\n\n      this.selectArea = { left: startX, top: startY, width: 0, height: 0 };\n      this.isDragging = true;\n      document.addEventListener(\"mousemove\", this.resizeArea);\n      document.addEventListener(\"mouseup\", this.stopSelectArea);\n    },\n\n    resizeArea(e) {\n      const rect = this.$refs.image.getBoundingClientRect();\n      const newWidth = e.clientX - rect.left - this.selectArea.left;\n      const newHeight = e.clientY - rect.top - this.selectArea.top;\n      this.selectArea.width = Math.max(10, newWidth);\n      this.selectArea.height = Math.max(10, newHeight);\n    },\n\n    stopSelectArea() {\n      this.isDragging = false;\n      document.removeEventListener(\"mousemove\", this.resizeArea);\n      document.removeEventListener(\"mouseup\", this.stopSelectArea);\n    },\n\n    startDragMark(index) {\n      this.currentDragIndex = index;\n      document.addEventListener(\"mousemove\", this.dragMark);\n      document.addEventListener(\"mouseup\", this.stopDragMark);\n    },\n\n    dragMark(e) {\n      const mark = this.markedAreas[this.currentDragIndex];\n      const rect = this.$refs.image.getBoundingClientRect();\n      const offsetX = e.clientX - rect.left;\n      const offsetY = e.clientY - rect.top;\n      mark.style.left = `${offsetX}px`;\n      mark.style.top = `${offsetY}px`;\n    },\n\n    stopDragMark() {\n      document.removeEventListener(\"mousemove\", this.dragMark);\n      document.removeEventListener(\"mouseup\", this.stopDragMark);\n    },\n\n    addMark() {\n      if (this.activeMode === \"markArea\" && this.selectArea) {\n        const newMark = {\n          style: {\n            left: `${this.selectArea.left}px`,\n            top: `${this.selectArea.top}px`,\n            width: `${this.selectArea.width}px`,\n            height: `${this.selectArea.height}px`,\n          },\n        };\n        this.markedAreas.push(newMark);\n        this.selectArea = null;\n      }\n    },\n\n    removeMark(index) {\n      this.markedAreas.splice(index, 1);\n    },\n\n    saveData() {\n      const data = {\n        selectArea: this.selectArea,\n        marks: this.markedAreas.map((mark) => ({\n          left: mark.style.left,\n          top: mark.style.top,\n          width: mark.style.width,\n          height: mark.style.height,\n        })),\n      };\n      console.log(\"Save data:\", data);\n      // 发送数据到后端（API 调用）\n      // axios.post('/api/save', data);\n    },\n  },\n\n  watch: {\n    activeMode(newMode) {\n      if (newMode === \"markArea\") {\n        this.addMark();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.image-container {\n  position: relative;\n}\n\n.image-wrapper {\n  position: relative;\n}\n\nimg {\n  width: 100%;\n  height: auto;\n}\n\n.mask {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.select-area {\n  position: absolute;\n  border: 2px dashed #00f;\n  background-color: rgba(0, 0, 0, 0.3);\n}\n\n.mark-area {\n  position: absolute;\n  border: 2px solid red;\n  background-color: rgba(255, 0, 0, 0.3);\n}\n\n.controls {\n  margin-top: 10px;\n}\n\nbutton {\n  margin-left: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}