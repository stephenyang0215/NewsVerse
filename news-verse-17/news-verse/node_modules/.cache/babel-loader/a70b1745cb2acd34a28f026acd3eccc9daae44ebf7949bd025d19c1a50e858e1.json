{"ast":null,"code":"export default {\n  data() {\n    return {\n      songs: [{\n        name: \"CCCA-4hi(JSS)\",\n        file: \"/music/CCCA-4hi.mp3\"\n      }, {\n        name: \"Eagles-Hotel California\",\n        file: \"/music/Eagles-Hotel-California.mp3\"\n      }, {\n        name: \"F.O.O.L-Conflict\",\n        file: \"/music/F.O.O.L-Conflict.mp3\"\n      }, {\n        name: \"Ryllz-Nemesis\",\n        file: \"/music/Ryllz-Nemesis.mp3\"\n      }, {\n        name: \"SOZZA-Spartanos(Original Mix)\",\n        file: \"/music/SOZZA-Spartanos.mp3\"\n      }, {\n        name: \"Taylor Swift-The Archer\",\n        file: \"/music/Taylor Swift-The Archer.mp3\"\n      }, {\n        name: \"Taylor Swift-You Need To Calm Down\",\n        file: \"/music/Taylor Swift-You Need To Calm Down.mp3\"\n      }],\n      currentSongIndex: null,\n      isPlaying: false\n    };\n  },\n  computed: {\n    currentSongUrl() {\n      return this.currentSongIndex !== null ? this.songs[this.currentSongIndex].file : \"\";\n    }\n  },\n  methods: {\n    togglePlayPause(index) {\n      if (this.isPlaying && this.currentSongIndex === index) {\n        this.stopSong();\n      } else {\n        this.playSong(index);\n      }\n    },\n    playSong(index) {\n      this.currentSongIndex = index;\n      this.isPlaying = true;\n      this.$refs.audio.src = this.currentSongUrl;\n      this.$refs.audio.load();\n      this.$refs.audio.play().catch(error => {\n        console.error(\"播放失败:\", error);\n      });\n    },\n    stopSong() {\n      this.isPlaying = false;\n      this.$refs.audio.pause();\n      this.$refs.audio.currentTime = 0;\n    }\n  }\n};","map":{"version":3,"names":["data","songs","name","file","currentSongIndex","isPlaying","computed","currentSongUrl","methods","togglePlayPause","index","stopSong","playSong","$refs","audio","src","load","play","catch","error","console","pause","currentTime"],"sources":["src/components/MusicPalyer.vue"],"sourcesContent":["<template>\n  <div class=\"music-player\">\n    <h2>Music List</h2>\n    <ul>\n      <li v-for=\"(song, index) in songs\" :key=\"index\">\n        <div>{{ song.name }}</div>\n        <button @click=\"togglePlayPause(index)\">\n          <i\n            :class=\"\n              isPlaying && currentSongIndex === index\n                ? 'fas fa-pause'\n                : 'fas fa-play'\n            \"\n          ></i>\n        </button>\n      </li>\n    </ul>\n    <audio ref=\"audio\" @ended=\"stopSong\"></audio>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      songs: [\n        { name: \"CCCA-4hi(JSS)\", file: \"/music/CCCA-4hi.mp3\" },\n        {\n          name: \"Eagles-Hotel California\",\n          file: \"/music/Eagles-Hotel-California.mp3\",\n        },\n        {\n          name: \"F.O.O.L-Conflict\",\n          file: \"/music/F.O.O.L-Conflict.mp3\",\n        },\n        { name: \"Ryllz-Nemesis\", file: \"/music/Ryllz-Nemesis.mp3\" },\n        {\n          name: \"SOZZA-Spartanos(Original Mix)\",\n          file: \"/music/SOZZA-Spartanos.mp3\",\n        },\n        {\n          name: \"Taylor Swift-The Archer\",\n          file: \"/music/Taylor Swift-The Archer.mp3\",\n        },\n        {\n          name: \"Taylor Swift-You Need To Calm Down\",\n          file: \"/music/Taylor Swift-You Need To Calm Down.mp3\",\n        },\n      ],\n      currentSongIndex: null,\n      isPlaying: false,\n    };\n  },\n  computed: {\n    currentSongUrl() {\n      return this.currentSongIndex !== null\n        ? this.songs[this.currentSongIndex].file\n        : \"\";\n    },\n  },\n  methods: {\n    togglePlayPause(index) {\n      if (this.isPlaying && this.currentSongIndex === index) {\n        this.stopSong();\n      } else {\n        this.playSong(index);\n      }\n    },\n    playSong(index) {\n      this.currentSongIndex = index;\n      this.isPlaying = true;\n      this.$refs.audio.src = this.currentSongUrl;\n      this.$refs.audio.load();\n      this.$refs.audio.play().catch((error) => {\n        console.error(\"播放失败:\", error);\n      });\n    },\n    stopSong() {\n      this.isPlaying = false;\n      this.$refs.audio.pause();\n      this.$refs.audio.currentTime = 0;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.music-player {\n  font-family: Arial, sans-serif;\n  padding: 20px;\n}\n\nh2 {\n  margin-bottom: 10px;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 5px 0;\n  border: 1px solid transparent;\n}\n/* li :hover {\n  border-color: #ccc;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n} */\nli div {\n  width: 170px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\nbutton {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n  color: #333;\n}\n\nbutton:hover {\n  color: #4caf50;\n}\n</style>\n"],"mappings":"AAsBA;EACAA,KAAA;IACA;MACAC,KAAA,GACA;QAAAC,IAAA;QAAAC,IAAA;MAAA,GACA;QACAD,IAAA;QACAC,IAAA;MACA,GACA;QACAD,IAAA;QACAC,IAAA;MACA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QACAD,IAAA;QACAC,IAAA;MACA,GACA;QACAD,IAAA;QACAC,IAAA;MACA,GACA;QACAD,IAAA;QACAC,IAAA;MACA,EACA;MACAC,gBAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,YAAAH,gBAAA,YACA,KAAAH,KAAA,MAAAG,gBAAA,EAAAD,IAAA,GACA;IACA;EACA;EACAK,OAAA;IACAC,gBAAAC,KAAA;MACA,SAAAL,SAAA,SAAAD,gBAAA,KAAAM,KAAA;QACA,KAAAC,QAAA;MACA;QACA,KAAAC,QAAA,CAAAF,KAAA;MACA;IACA;IACAE,SAAAF,KAAA;MACA,KAAAN,gBAAA,GAAAM,KAAA;MACA,KAAAL,SAAA;MACA,KAAAQ,KAAA,CAAAC,KAAA,CAAAC,GAAA,QAAAR,cAAA;MACA,KAAAM,KAAA,CAAAC,KAAA,CAAAE,IAAA;MACA,KAAAH,KAAA,CAAAC,KAAA,CAAAG,IAAA,GAAAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;MACA;IACA;IACAR,SAAA;MACA,KAAAN,SAAA;MACA,KAAAQ,KAAA,CAAAC,KAAA,CAAAO,KAAA;MACA,KAAAR,KAAA,CAAAC,KAAA,CAAAQ,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}