{"ast":null,"code":"// const data = require(\"../assets/data.json\");\n// const data = require(\"../assets/final_output_1107.json\");\nimport { getCategotiesDataAPI, getKeywordsDataAPI, getSearchDataAPI } from \"@/api/index\";\nexport default {\n  data() {\n    return {\n      pageTitle: \"\",\n      tableData: [],\n      currentPage: 1,\n      itemsPerPage: 5,\n      isDown: [false, false, false, false, false],\n      linkList: {},\n      topKeywords: [],\n      data: null,\n      loading: false\n    };\n  },\n  methods: {\n    goBack() {\n      this.$router.back();\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n      this.isDown = [false, false, false, false, false];\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n      this.isDown = [false, false, false, false, false];\n    },\n    downClick(i) {\n      this.$set(this.isDown, i, !this.isDown[i]);\n    },\n    getDomain(url) {\n      const start = url.indexOf(\"://\") + 3;\n      const end = url.indexOf(\"/\", start);\n      return end === -1 ? url.substring(start) : url.substring(start, end);\n    },\n    filterNewsByKeyword(keyword) {\n      this.loading = true;\n      this.pageTitle = keyword;\n      this.getSecrchData({\n        keyword: keyword,\n        id: 1\n      });\n    },\n    async getData() {\n      this.loading = true;\n      switch (this.$route.query.title) {\n        case \"Business\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.business;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Entertainment\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.entertainment;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"General\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.general;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Health\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.health;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Science\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.science;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Sports\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.sports;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Technology\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.technology;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        default:\n          this.filterNewsByKeyword(this.$route.query.title);\n      }\n    },\n    async getKeywords() {\n      try {\n        const res = await getKeywordsDataAPI();\n        this.topKeywords = res.slice(0, 10);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getSecrchData(data) {\n      try {\n        const res = await getSearchDataAPI(data);\n        const filteredNews = {\n          item: res\n        };\n        console.log(\"filteredNews\", filteredNews);\n        this.tableData = filteredNews;\n        this.loading = false;\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  computed: {\n    totalPages() {\n      if (this.tableData.length !== 0) {\n        return Math.ceil(this.tableData.item.length / this.itemsPerPage);\n      } else {\n        return null;\n      }\n    },\n    paginatedData() {\n      if (this.tableData.length !== 0) {\n        const start = (this.currentPage - 1) * this.itemsPerPage;\n        return this.tableData.item.slice(start, start + this.itemsPerPage);\n      } else {\n        return null;\n      }\n    }\n  },\n  created() {\n    this.getData();\n    this.getKeywords();\n  }\n};","map":{"version":3,"names":["getCategotiesDataAPI","getKeywordsDataAPI","getSearchDataAPI","data","pageTitle","tableData","currentPage","itemsPerPage","isDown","linkList","topKeywords","loading","methods","goBack","$router","back","nextPage","totalPages","prevPage","downClick","i","$set","getDomain","url","start","indexOf","end","substring","filterNewsByKeyword","keyword","getSecrchData","id","getData","$route","query","title","res","business","error","console","entertainment","general","health","science","sports","technology","getKeywords","slice","filteredNews","item","log","computed","length","Math","ceil","paginatedData","created"],"sources":["src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"about\">\n    <div class=\"top\">\n      <div style=\"display: flex; padding: 10px; width: 40px\" @click=\"goBack\">\n        <i class=\"el-icon-back\" style=\"color: #fff; cursor: pointer\"></i>\n      </div>\n      <h1 class=\"title\">{{ pageTitle }}</h1>\n    </div>\n    <div class=\"content\">\n      <el-card style=\"background: #e0e1dd; width: 78%\" v-loading=\"loading\">\n        <div v-if=\"tableData.length !== 0\">\n          <div style=\"min-height: 555px\">\n            <div v-for=\"(item, i) in paginatedData\" :key=\"i\">\n              <div class=\"itemContainer\">\n                <div class=\"textContainer\">\n                  {{ item.topic }}\n                </div>\n                <div\n                  v-if=\"!isDown[i]\"\n                  @click=\"downClick(i)\"\n                  style=\"cursor: pointer; font-size: 32px\"\n                >\n                  <i class=\"el-icon-arrow-down\"></i>\n                </div>\n                <div\n                  v-if=\"isDown[i]\"\n                  @click=\"downClick(i)\"\n                  style=\"cursor: pointer; font-size: 32px\"\n                >\n                  <i class=\"el-icon-arrow-up\"></i>\n                </div>\n              </div>\n              <div v-if=\"isDown[i]\" class=\"summary\">\n                <el-card style=\"background: #c0bdc1\">\n                  <el-descriptions :title=\"item.topic\" :column=\"1\">\n                    <el-descriptions-item label=\"summary\">{{\n                      item.summary\n                    }}</el-descriptions-item>\n                  </el-descriptions>\n                  <div>\n                    <ul class=\"ul-item\">\n                      <li\n                        class=\"li-item\"\n                        v-for=\"(i, index) in item.news_sources\"\n                        :key=\"index\"\n                      >\n                        {{ i.title }}\n                        <el-link\n                          :href=\"'https://' + getDomain(i.url)\"\n                          target=\"_blank\"\n                          type=\"primary\"\n                          >{{ getDomain(i.url) }}</el-link\n                        >\n                        keyword:\n                        <span\n                          v-for=\"(kitem, k) in i.keywords\"\n                          @click=\"filterNewsByKeyword(kitem)\"\n                          style=\"\n                            margin: 0px 5px 0px 5px;\n                            color: #409eff;\n                            border-bottom: 1px solid #409eff;\n                            cursor: pointer;\n                          \"\n                          :key=\"k\"\n                          >{{ kitem }}</span\n                        >\n                        Score :{{ i.bias }}\n                        <el-popover\n                          placement=\"top-start\"\n                          width=\"600\"\n                          trigger=\"hover\"\n                          content=\"Stay informed with concise summaries and objective bias ratings across business, entertainment, health, science, sports, and technology news. Each category is organized by topic for streamlined browsing, while bias is rated from 0-3 (left-leaning), 4-6 (neutral), and 7-10 (right-leaning). Access diverse perspectives and make informed decisions with ease.\"\n                        >\n                          <el-button slot=\"reference\" type=\"text\"\n                            ><i class=\"el-icon-warning-outline\"></i\n                          ></el-button>\n                        </el-popover>\n                      </li>\n                    </ul>\n                  </div>\n                </el-card>\n              </div>\n            </div>\n          </div>\n          <div class=\"pagination\">\n            <button @click=\"prevPage\" :disabled=\"currentPage === 1\">\n              <img src=\"@/assets/previous.png\" alt=\"← Previous\">\n            </button>\n            <span>page {{ currentPage }} </span>\n            <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\n              next →\n            </button>\n          </div>\n        </div>\n        <div\n          style=\"\n            min-height: 663px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          \"\n          v-else\n        >\n          <el-empty\n            description=\"No results found for the given keyword.\"\n          ></el-empty>\n        </div>\n      </el-card>\n      <el-card\n        style=\"background: #ece8d9; width: 20%; margin-left: 20px\"\n        v-loading=\"loading\"\n      >\n        <div style=\"font-size: 24px; font-weight: 700; margin-bottom: 20px\">\n          Top Keywords List\n        </div>\n        <div\n          v-for=\"(item, index) in topKeywords\"\n          :key=\"index\"\n          style=\"margin-top: 15px; cursor: pointer\"\n          @click=\"filterNewsByKeyword(item.keyword)\"\n        >\n          <div style=\"margin-bottom: 5px; font-weight: 700; font-size: 18px\">\n            {{ item.keyword }}\n          </div>\n          <div style=\"color: grey\">frequency:{{ item.frequency }}</div>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\n// const data = require(\"../assets/data.json\");\n// const data = require(\"../assets/final_output_1107.json\");\nimport {\n  getCategotiesDataAPI,\n  getKeywordsDataAPI,\n  getSearchDataAPI,\n} from \"@/api/index\";\n\nexport default {\n  data() {\n    return {\n      pageTitle: \"\",\n      tableData: [],\n      currentPage: 1,\n      itemsPerPage: 5,\n      isDown: [false, false, false, false, false],\n      linkList: {},\n      topKeywords: [],\n      data: null,\n      loading: false,\n    };\n  },\n  methods: {\n    goBack() {\n      this.$router.back();\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n      this.isDown = [false, false, false, false, false];\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n      this.isDown = [false, false, false, false, false];\n    },\n    downClick(i) {\n      this.$set(this.isDown, i, !this.isDown[i]);\n    },\n    getDomain(url) {\n      const start = url.indexOf(\"://\") + 3;\n      const end = url.indexOf(\"/\", start);\n      return end === -1 ? url.substring(start) : url.substring(start, end);\n    },\n    filterNewsByKeyword(keyword) {\n      this.loading = true;\n      this.pageTitle = keyword;\n      this.getSecrchData({ keyword: keyword, id: 1 });\n    },\n    async getData() {\n      this.loading = true;\n      switch (this.$route.query.title) {\n        case \"Business\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.business;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Entertainment\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.entertainment;\n\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"General\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.general;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Health\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.health;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Science\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.science;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Sports\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.sports;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        case \"Technology\":\n          try {\n            const res = await getCategotiesDataAPI();\n            this.data = res;\n            this.tableData = this.data.technology;\n            this.loading = false;\n          } catch (error) {\n            console.error(error);\n          } finally {\n            this.loading = false;\n          }\n          break;\n        default:\n          this.filterNewsByKeyword(this.$route.query.title);\n      }\n    },\n    async getKeywords() {\n      try {\n        const res = await getKeywordsDataAPI();\n        this.topKeywords = res.slice(0, 10);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getSecrchData(data) {\n      try {\n        const res = await getSearchDataAPI(data);\n        const filteredNews = {\n          item: res,\n        };\n        console.log(\"filteredNews\", filteredNews);\n\n        this.tableData = filteredNews;\n        this.loading = false;\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n  computed: {\n    totalPages() {\n      if (this.tableData.length !== 0) {\n        return Math.ceil(this.tableData.item.length / this.itemsPerPage);\n      } else {\n        return null;\n      }\n    },\n    paginatedData() {\n      if (this.tableData.length !== 0) {\n        const start = (this.currentPage - 1) * this.itemsPerPage;\n        return this.tableData.item.slice(start, start + this.itemsPerPage);\n      } else {\n        return null;\n      }\n    },\n  },\n  created() {\n    this.getData();\n    this.getKeywords();\n  },\n};\n</script>\n\n<style scoped>\n@font-face {\n  font-family: \"knorke\";\n  src: url(\"../assets/font/Knorke.ttf\");\n}\n.about {\n  background: #494949;\n}\n.title {\n  font-family: \"knorke\";\n  color: #d7d1d1;\n}\n.content {\n  padding: 0px 100px 100px 100px;\n  display: flex;\n  margin-bottom: 13px;\n}\n.content-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n  background: #f1f1f1;\n  border: 1px solid #ccc;\n  padding: 20px;\n  text-align: center;\n}\n.pagination {\n  margin-top: 20px;\n}\nbutton {\n  margin: 0 5px;\n}\n.textContainer {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 32px;\n}\n.itemContainer {\n  margin: 40px;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #ccc;\n  border-radius: 10px;\n}\n.summary {\n  margin: 40px;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.ul-item {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 12px;\n}\n.li-item {\n  text-align: left;\n}\n::v-deep .el-descriptions__table {\n  background: #c0bdc1;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}